
<script>
  import ENV from "../../env.config";
  /**
   * Component card for display all teams
   * @displayName DisplayListTeam
   */
  export default {
    name: "DisplayListTeam",

    data() {
      return {
        info: [],
        page: 1,
      };
    },
    props: {
      /**
       * The id of this card
       */
      id: "",
      /**
       * The type of sport of this card
       */
      sport: String, // String display in the header
      /**
       * The api name (ex: football, cs-go, etc...)
       */
      apiName: String, // String used to search info for 1 sport in getInfos
      /**
       * The button for del this card in favorite
       */
      delButton: Boolean,
    },
    beforeMount() {
      this.getInfos();
    },
    computed: {
      myFavorites: function () {
        return this.$store.state.MyFavorites;
      },
    },
    methods: {
      /**
       * Add this team to my favorites
       *
       * @public
       */
      addTeamToMyFavorite(item) {
        const teamSlug = item.slug;
        this.$store.dispatch("addToMyFavorites", {
          id: this.$store.state.tabSelected.id,
          data: {
            sport: this.sport,
            type: "team",
            name: teamSlug,
          },
        });
        this.getInfos();
      },
      /**
       * display next page of results
       *
       * @public
       */
      async next() {
        this.page++;
        this.getInfos();
      },
      /**
       * display previous page of results
       *
       * @public
       */
      async prev() {
        if (this.page > 1) {
          this.page--;
          this.getInfos();
        }
      },

      /**
       * Get datas from api for display on the card
       *
       * @public
       */
      async getInfos() {
        let response = [];
        var myHeaders = new Headers();
        myHeaders.append("Authorization", "Bearer " + ENV.API_PANDA_SPORT);
        var requestOptions = {
          method: "GET",
          headers: myHeaders,
          redirect: "follow",
        };
        await this.$store.dispatch("getMyFavorites");
        await fetch(
            `https://api.pandascore.co/${this.apiName}/teams?sort=name&per_page=10&page[number]=${this.page}`,
            requestOptions
          )
          .then((response) => response.json())
          .then((result) => (response = result))
          .then((update) => {
            for (let i = 0; i < response.length; i++) {
              let check = false;
              for (let j = 0; j < this.myFavorites.length; j++) {
                if (response[i].slug === this.$store.state.MyFavorites[j].data[0].name) {
                  check = true;
                }
              }
              if (check) {
                response[i].button = false;
              } else response[i].button = true;
            }
            this.info = response;
          })
      },
    },
  };
</script>